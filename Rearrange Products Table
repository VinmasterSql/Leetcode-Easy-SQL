##### Rearrange Products Table #####

Write an SQL query to rearrange the Products table so that each row has (product_id, store, price).
If a product is not available in a store, do not include a row with that product_id and store combination in the result table.
Return the result table in any order.
The query result format is in the following example.

Example 1:
Input: 
Products table:
+------------+--------+--------+--------+
| product_id | store1 | store2 | store3 |
+------------+--------+--------+--------+
| 0          | 95     | 100    | 105    |
| 1          | 70     | null   | 80     |
+------------+--------+--------+--------+
Output: 
+------------+--------+-------+
| product_id | store  | price |
+------------+--------+-------+
| 0          | store1 | 95    |
| 0          | store2 | 100   |
| 0          | store3 | 105   |
| 1          | store1 | 70    |
| 1          | store3 | 80    |
+------------+--------+-------+

######## SOLUTION ########
# Write your MySQL query statement below

SELECT product_id, store, price 
FROM
    (
      SELECT product_id, 'store1' AS store, store1 AS price FROM Products
      UNION  
      SELECT product_id, 'store2' AS store, store2 AS price FROM Products
      UNION
      SELECT product_id, 'store3' AS store, store3 AS price FROM Products
    ) vin
WHERE price IS NOT NULL;

NOTE : This concept is belongs to Unpivoting the data
